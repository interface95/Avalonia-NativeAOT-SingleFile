using System.Diagnostics.CodeAnalysis;
using Avalonia_NativeAOT_SingleFile.ViewModels;
using Avalonia_NativeAOT_SingleFile.Views;
using Avalonia;
using Avalonia.Controls.ApplicationLifetimes;

namespace Avalonia_NativeAOT_SingleFile;

/// <summary>
///     Provides application-level behavior and initialization for the Avalonia NativeAOT single file application.
/// </summary>
/// <remarks>
///     This partial class implementation handles framework initialization completion:
///     <para>
///         - Configures the main window and its view model when running in desktop mode<br />
///         - Sets up the application's main window through <see cref="IClassicDesktopStyleApplicationLifetime" /><br />
///         - Associates the <see cref="MainWindow" /> with <see cref="MainWindowViewModel" /> as data context<br />
///         - Maintains proper initialization sequence by calling base framework completion
///     </para>
///     This implementation specifically targets classic desktop application environments.
/// </remarks>
[SuppressMessage("ReSharper", "PartialTypeWithSinglePart")]
public partial class App : Application
{
    // App.Initialize() has been auto generated by ViewLocatorGenerator.

    public override void OnFrameworkInitializationCompleted()
    {
        // TODO: Find a way to remove the DataValidators plugin because it causes issues with NativeAOT.
        // BindingPlugins.DataValidators.RemoveAt(0);
        // MessengerRegistrations.RegisterAll();
        var mainWindowViewModel = new MainWindowViewModel();
        MessengerRegistrations.RegisterHandleDialogResult(mainWindowViewModel);
        if (ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop)
            desktop.MainWindow = new MainWindow
            {
                DataContext = mainWindowViewModel
            };
        base.OnFrameworkInitializationCompleted();
    }
}